MySQL Connector/C++

This is a release of MySQL Connector/C++, Oracle's
dual-license C++ API for connecting client applications
to MySQL.

Copyright (c) 2008, 2016, Oracle and/or its affiliates. All rights reserved.

--------------------------------------------------------------------------------

Dear MySQL Users,

A new GA (general availability) version of MySQL Connector/C++ has
been made available: MySQL Connector/C++ 1.1.7 GA. The MySQL
Connector/C++ provides a C++ API for connecting client applications to
the MySQL Server 5.5 or newer.

You can download the production release at:

http://dev.mysql.com/downloads/connector/cpp/1.1.html

MySQL Connector C++ (Commercial) will be available for download on the
My Oracle Support (MOS) website. This release will be available on eDelivery
(OSDC) in next month's upload cycle.

The MySQL driver for C++ offers an easy to use API derived from JDBC
4.0. MySQL Workbench has used it successfully for years.

We have improved the driver since the last GA release. Please see the
documentation and the CHANGES file in the source distribution for a
detailed description of bugs that have been fixed. Bug descriptions are
also listed below.

Enjoy!

======================================================================

Changes in MySQL Connector/C++ 1.1.7

   Configuration Notes

     * Binary distributions for this release of MySQL
       Connector/C++ were linked against libmysqlclient from
       MySQL 5.7.10, except for OS X 10.8/10.9, for which
       distributions were linked against MySQL 5.7.9. This
       enables Connector/C++ to take advantage of features
       present in recent client library versions. Some examples:

          + Support for the MySQL JSON data type is available.
            Current versions of MySQL Workbench require JSON
            support, so to build MySQL Workbench 6.3.5 or higher
            from source, it is necessary to use a version of
            Connector/C++ at least as recent as 1.1.7.

          + Applications will attempt to establish a secure
            (encrypted) connection by default whenever the
            server is enabled to support secure connections, and
            fall back to an unencrypted connection otherwise.
            (This is as described at Configuring MySQL to Use
            Secure Connections
            (http://dev.mysql.com/doc/refman/5.7/en/using-secure
            -connections.html).) To enforce a secure connection,
            such that an error occurs if secure connections are
            not available, applications can enable the
            sslEnforce connection option.
       To build Connector/C++ from source, you must use either a
       General Availability version of MySQL 5.7 (5.7.9 or
       higher) or Connector/C 6.1.8 or higher. Set the MYSQL_DIR
       CMake option appropriately at configuration time as
       necessary. (Bug #22351273)

   Security Notes

     * The linked OpenSSL library for Connector/C++ Commercial
       has been updated to version 1.0.1q. Issues fixed in the
       new OpenSSL version are described at
       http://www.openssl.org/news/vulnerabilities.html.
       This change does not affect Oracle-produced MySQL
       Community builds of Connector/C++, which use the yaSSL
       library instead.

   Spatial Data Support

     * The required version of the Boost library for
       Connector/C++ builds has been raised to 1.56.0.

   Bugs Fixed

     * MySQL_Prepared_ResultSet::relative() failed to fetch the
       record due to a missing proxy->fetch() call. (Bug
       #21152054)

     * During Connector/C++ builds, the MySQL Server CXXFLAGS
       and CFLAGS values were used rather than the system
       default values. To specify explicitly to use the server
       values, enable the new USE_SERVER_CXXFLAGS CMake option.
       (Bug #77655, Bug #21391025)

Enjoy!
